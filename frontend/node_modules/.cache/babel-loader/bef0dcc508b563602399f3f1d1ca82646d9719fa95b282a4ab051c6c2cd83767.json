{"ast":null,"code":"var _jsxFileName = \"/app/src/compoments/Adding.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react'; // import useEffect\nimport CreateContact from './CreateContact';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail(props) {\n  // console.log(props);\n\n  // function onChange() {\n  // \t// Find the contact we want to update and update it\n  // \tprops.setTasks(tasks => tasks.map(task => {\n  // \t\tif (task.id === props.id) {\n  // \t\t\treturn {\n  // \t\t\t\tid: task.id,\n  // \t\t\t\tdescription: task.description,\n  // \t\t\t\tcompleted: !task.completed\n  // \t\t\t};\n  // \t\t} else {\n  // \t\t\treturn task;\n  // \t\t}\n  // \t}));\n  // }\n\n  // function onClick() {\n  // \t// Find the task we want to delete and remove it\n  // \tprops.setTasks(tasks => tasks.filter(task => task.id !== props.id));\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <button type=\"button\" onClick={onClick}>X</button> \n    _jsxDEV(\"h3\", {\n      children: [\" \", props.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = Detail;\nfunction Add(props) {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleButtonClick = () => {\n    props.setNames(names => [...names, {\n      id: tasks.length + 1,\n      name: inputValue\n    }]);\n    // Clear the input value after passing to CreateContact\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderBottom: \"solid white\",\n        padding: \"10px\",\n        backgroundColor: \"#7D7C7C\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleInputChange,\n        value: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"button1\",\n        onClick: handleButtonClick,\n        children: \"Create Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(CreateContact, {\n      name: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Add, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c2 = Add;\nexport default Add;\nvar _c, _c2;\n$RefreshReg$(_c, \"Detail\");\n$RefreshReg$(_c2, \"Add\");","map":{"version":3,"names":["useState","useEffect","CreateContact","React","jsxDEV","_jsxDEV","Detail","props","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","Add","_s","inputValue","setInputValue","handleInputChange","event","target","value","handleButtonClick","setNames","names","id","tasks","length","style","borderBottom","padding","backgroundColor","heading","type","onChange","class","onClick","_c2","$RefreshReg$"],"sources":["/app/src/compoments/Adding.js"],"sourcesContent":["import { useState, useEffect } from 'react';  // import useEffect\nimport CreateContact from './CreateContact'\nimport React from 'react';\n\nfunction Detail(props) {\n\n\t// console.log(props);\n\n\t// function onChange() {\n\t// \t// Find the contact we want to update and update it\n\t// \tprops.setTasks(tasks => tasks.map(task => {\n\t// \t\tif (task.id === props.id) {\n\t// \t\t\treturn {\n\t// \t\t\t\tid: task.id,\n\t// \t\t\t\tdescription: task.description,\n\t// \t\t\t\tcompleted: !task.completed\n\t// \t\t\t};\n\t// \t\t} else {\n\t// \t\t\treturn task;\n\t// \t\t}\n\t// \t}));\n\t// }\n\n\t// function onClick() {\n\t// \t// Find the task we want to delete and remove it\n\t// \tprops.setTasks(tasks => tasks.filter(task => task.id !== props.id));\n\t// }\n\n\treturn (\n\t\t// <button type=\"button\" onClick={onClick}>X</button> \n        <h3> {props.name} </h3>\n\t);\n}\n\n\n\nfunction Add(props) {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {setInputValue(event.target.value);\n    };\n\n    const handleButtonClick = () => {\n    props.setNames(names => [...names, { id: tasks.length + 1, name: inputValue }]);  \n    // Clear the input value after passing to CreateContact\n    };\n\n    return (\n        <div >\n           <div style={{borderBottom: \"solid white\", padding:\"10px\", backgroundColor: \"#7D7C7C\"}}>\n           <h2>{props.heading}</h2>\n           <input type = \"text\" onChange={handleInputChange} value={inputValue} /> \n           <br/><br/>\n           <button class = \"button1\" onClick={handleButtonClick}>Create Contact</button>    \n\n             \n           </div>   \n           <CreateContact name = {inputValue}/>  \n           \n              \n        \n        </div>\n\n    );\n}\n\nexport default Add;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAE;AAC9C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAACC,KAAK,EAAE;EAEtB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;IAAA;IACC;IACMF,OAAA;MAAAG,QAAA,GAAI,GAAC,EAACD,KAAK,CAACE,IAAI,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;AAE/B;AAACC,EAAA,GA5BQR,MAAM;AAgCf,SAASS,GAAGA,CAACR,KAAK,EAAE;EAAAS,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMmB,iBAAiB,GAAIC,KAAK,IAAK;IAACF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvE,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAChChB,KAAK,CAACiB,QAAQ,CAACC,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;MAAEC,EAAE,EAAEC,KAAK,CAACC,MAAM,GAAG,CAAC;MAAEnB,IAAI,EAAEQ;IAAW,CAAC,CAAC,CAAC;IAC/E;EACA,CAAC;;EAED,oBACIZ,OAAA;IAAAG,QAAA,gBACGH,OAAA;MAAKwB,KAAK,EAAE;QAACC,YAAY,EAAE,aAAa;QAAEC,OAAO,EAAC,MAAM;QAAEC,eAAe,EAAE;MAAS,CAAE;MAAAxB,QAAA,gBACtFH,OAAA;QAAAG,QAAA,EAAKD,KAAK,CAAC0B;MAAO;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBR,OAAA;QAAO6B,IAAI,EAAG,MAAM;QAACC,QAAQ,EAAEhB,iBAAkB;QAACG,KAAK,EAAEL;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvER,OAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAAAR,OAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACVR,OAAA;QAAQ+B,KAAK,EAAG,SAAS;QAACC,OAAO,EAAEd,iBAAkB;QAAAf,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGxE,CAAC,eACNR,OAAA,CAACH,aAAa;MAACO,IAAI,EAAIQ;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIlC,CAAC;AAGd;AAACG,EAAA,CA5BQD,GAAG;AAAAuB,GAAA,GAAHvB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}